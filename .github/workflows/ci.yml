name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  php-check:
    runs-on: ubuntu-latest
    
    services:
      sqlite:
        image: nouchka/sqlite3:latest
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
          
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Install PHP dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
        
      - name: Generate application key
        run: php artisan key:generate
        
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
          
      - name: Execute migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --force
        
      - name: Run PHPStan analysis
        run: vendor/bin/phpstan analyse --memory-limit=1G --no-progress
        
      - name: Run unit tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
        run: php artisan test --testsuite=Unit
        
      - name: Run feature tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
        run: php artisan test --testsuite=Feature

  node-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install Node dependencies
        run: npm ci
        
      - name: Build assets
        run: npm run build
        
      - name: Check for TypeScript errors (if applicable)
        run: |
          if [ -f "tsconfig.json" ]; then
            npm run type-check || echo "TypeScript check not configured"
          fi